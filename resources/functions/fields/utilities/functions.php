<?php

$GLOBALS['fw_fields']['common']['function']['breakpoints'] = array(
	'settings' => array (
		'title' => 'Function â€” Breakpoints'
	),
	'field_group' => array (
		'key' => 'builder_function_breakpoints',
		'title' => 'Breakpoints',
		'fields' => array(
			array(
				'key' => 'builder_function_breakpoints_group',
				'label' => 'Breakpoints',
				'name' => 'breakpoints',
				'type' => 'group',
				'instructions' => '',
				'required' => 0,
				'conditional_logic' => 0,
				'wrapper' => array(
					'width' => '',
					'class' => 'col-breakpoints hide-label',
					'id' => '',
				),
				'layout' => 'block',
				'sub_fields' => array(
					array(
						'key' => 'builder_function_breakpoints_default',
						'label' => 'Default',
						'name' => 'xs',
						'type' => 'group',
						'instructions' => '',
						'required' => 0,
						'conditional_logic' => 0,
						'wrapper' => array(
							'width' => '',
							'class' => '',
							'id' => '',
						),
						'layout' => 'block',
						'sub_fields' => array(
							array(
								'key' => 'builder_function_breakpoints_default_hide',
								'label' => 'Hide',
								'name' => 'hide',
								'type' => 'true_false',
								'instructions' => '',
								'required' => 0,
								'conditional_logic' => 0,
								'wrapper' => array(
									'width' => '16',
									'class' => '',
									'id' => '',
								),
								'message' => 'Hide',
								'default_value' => 0,
								'ui' => 0,
								'ui_on_text' => '',
								'ui_off_text' => '',
							),
							array(
								'key' => 'builder_function_breakpoints_default_cols',
								'label' => 'Columns',
								'name' => 'col',
								'type' => 'number',
								'instructions' => '',
								'required' => 0,
								'conditional_logic' => array(
									array(
										array(
											'field' => 'builder_function_breakpoints_default_hide',
											'operator' => '!=',
											'value' => '1',
										),
									),
								),
								'wrapper' => array(
									'width' => '28',
									'class' => '',
									'id' => '',
								),
								'default_value' => '',
								'placeholder' => '',
								'prepend' => 'col-',
								'append' => '',
								'min' => 1,
								'max' => 12,
								'step' => 1,
							),
							array(
								'key' => 'builder_function_breakpoints_default_offset',
								'label' => 'Offset',
								'name' => 'offset',
								'type' => 'number',
								'instructions' => '',
								'required' => 0,
								'conditional_logic' => array(
									array(
										array(
											'field' => 'builder_function_breakpoints_default_hide',
											'operator' => '!=',
											'value' => '1',
										),
									),
								),
								'wrapper' => array(
									'width' => '28',
									'class' => '',
									'id' => '',
								),
								'default_value' => '',
								'placeholder' => '',
								'prepend' => 'offset-',
								'append' => '',
								'min' => 0,
								'max' => 11,
								'step' => 1,
							),
							array(
								'key' => 'builder_function_breakpoints_default_order',
								'label' => 'Order',
								'name' => 'order',
								'type' => 'number',
								'instructions' => '',
								'required' => 0,
								'conditional_logic' => array(
									array(
										array(
											'field' => 'builder_function_breakpoints_default_hide',
											'operator' => '!=',
											'value' => '1',
										),
									),
								),
								'wrapper' => array(
									'width' => '28',
									'class' => '',
									'id' => '',
								),
								'default_value' => '',
								'placeholder' => '',
								'prepend' => 'order-',
								'append' => '',
								'min' => 0,
								'max' => 12,
								'step' => 1,
							),
						),
					),
					array(
						'key' => 'builder_function_breakpoints_small',
						'label' => 'Small',
						'name' => 'sm',
						'type' => 'group',
						'instructions' => '',
						'required' => 0,
						'conditional_logic' => 0,
						'wrapper' => array(
							'width' => '',
							'class' => '',
							'id' => '',
						),
						'layout' => 'block',
						'sub_fields' => array(
							array(
								'key' => 'builder_function_breakpoints_small_hide',
								'label' => 'Hide',
								'name' => 'hide',
								'type' => 'true_false',
								'instructions' => '',
								'required' => 0,
								'conditional_logic' => 0,
								'wrapper' => array(
									'width' => '16',
									'class' => '',
									'id' => '',
								),
								'message' => 'Hide',
								'default_value' => 0,
								'ui' => 0,
								'ui_on_text' => '',
								'ui_off_text' => '',
							),
							array(
								'key' => 'builder_function_breakpoints_small_cols',
								'label' => 'Columns',
								'name' => 'col',
								'type' => 'number',
								'instructions' => '',
								'required' => 0,
								'conditional_logic' => array(
									array(
										array(
											'field' => 'builder_function_breakpoints_small_hide',
											'operator' => '!=',
											'value' => '1',
										),
									),
								),
								'wrapper' => array(
									'width' => '28',
									'class' => '',
									'id' => '',
								),
								'default_value' => '',
								'placeholder' => '',
								'prepend' => 'col-sm-',
								'append' => '',
								'min' => 1,
								'max' => 12,
								'step' => 1,
							),
							array(
								'key' => 'builder_function_breakpoints_small_offset',
								'label' => 'Offset',
								'name' => 'offset',
								'type' => 'number',
								'instructions' => '',
								'required' => 0,
								'conditional_logic' => array(
									array(
										array(
											'field' => 'builder_function_breakpoints_small_hide',
											'operator' => '!=',
											'value' => '1',
										),
									),
								),
								'wrapper' => array(
									'width' => '28',
									'class' => '',
									'id' => '',
								),
								'default_value' => '',
								'placeholder' => '',
								'prepend' => 'offset-sm-',
								'append' => '',
								'min' => 0,
								'max' => 11,
								'step' => 1,
							),
							array(
								'key' => 'builder_function_breakpoints_small_order',
								'label' => 'Order',
								'name' => 'order',
								'type' => 'number',
								'instructions' => '',
								'required' => 0,
								'conditional_logic' => array(
									array(
										array(
											'field' => 'builder_function_breakpoints_small_hide',
											'operator' => '!=',
											'value' => '1',
										),
									),
								),
								'wrapper' => array(
									'width' => '28',
									'class' => '',
									'id' => '',
								),
								'default_value' => '',
								'placeholder' => '',
								'prepend' => 'order-sm-',
								'append' => '',
								'min' => 0,
								'max' => 12,
								'step' => 1,
							),
						),
					),
					array(
						'key' => 'builder_function_breakpoints_medium',
						'label' => 'Medium',
						'name' => 'md',
						'type' => 'group',
						'instructions' => '',
						'required' => 0,
						'conditional_logic' => 0,
						'wrapper' => array(
							'width' => '',
							'class' => '',
							'id' => '',
						),
						'layout' => 'block',
						'sub_fields' => array(
							array(
								'key' => 'builder_function_breakpoints_medium_hide',
								'label' => 'Hide',
								'name' => 'hide',
								'type' => 'true_false',
								'instructions' => '',
								'required' => 0,
								'conditional_logic' => 0,
								'wrapper' => array(
									'width' => '16',
									'class' => '',
									'id' => '',
								),
								'message' => 'Hide',
								'default_value' => 0,
								'ui' => 0,
								'ui_on_text' => '',
								'ui_off_text' => '',
							),
							array(
								'key' => 'builder_function_breakpoints_medium_cols',
								'label' => 'Columns',
								'name' => 'col',
								'type' => 'number',
								'instructions' => '',
								'required' => 0,
								'conditional_logic' => array(
									array(
										array(
											'field' => 'builder_function_breakpoints_medium_hide',
											'operator' => '!=',
											'value' => '1',
										),
									),
								),
								'wrapper' => array(
									'width' => '28',
									'class' => '',
									'id' => '',
								),
								'default_value' => '',
								'placeholder' => '',
								'prepend' => 'col-md-',
								'append' => '',
								'min' => 1,
								'max' => 12,
								'step' => 1,
							),
							array(
								'key' => 'builder_function_breakpoints_medium_offset',
								'label' => 'Offset',
								'name' => 'offset',
								'type' => 'number',
								'instructions' => '',
								'required' => 0,
								'conditional_logic' => array(
									array(
										array(
											'field' => 'builder_function_breakpoints_medium_hide',
											'operator' => '!=',
											'value' => '1',
										),
									),
								),
								'wrapper' => array(
									'width' => '28',
									'class' => '',
									'id' => '',
								),
								'default_value' => '',
								'placeholder' => '',
								'prepend' => 'offset-md-',
								'append' => '',
								'min' => 0,
								'max' => 11,
								'step' => 1,
							),
							array(
								'key' => 'builder_function_breakpoints_medium_order',
								'label' => 'Order',
								'name' => 'order',
								'type' => 'number',
								'instructions' => '',
								'required' => 0,
								'conditional_logic' => array(
									array(
										array(
											'field' => 'builder_function_breakpoints_medium_hide',
											'operator' => '!=',
											'value' => '1',
										),
									),
								),
								'wrapper' => array(
									'width' => '28',
									'class' => '',
									'id' => '',
								),
								'default_value' => '',
								'placeholder' => '',
								'prepend' => 'order-md-',
								'append' => '',
								'min' => 0,
								'max' => 12,
								'step' => 1,
							),
						),
					),
					array(
						'key' => 'builder_function_breakpoints_large',
						'label' => 'Large',
						'name' => 'lg',
						'type' => 'group',
						'instructions' => '',
						'required' => 0,
						'conditional_logic' => 0,
						'wrapper' => array(
							'width' => '',
							'class' => '',
							'id' => '',
						),
						'layout' => 'block',
						'sub_fields' => array(
							array(
								'key' => 'builder_function_breakpoints_large_hide',
								'label' => 'Hide',
								'name' => 'hide',
								'type' => 'true_false',
								'instructions' => '',
								'required' => 0,
								'conditional_logic' => 0,
								'wrapper' => array(
									'width' => '16',
									'class' => '',
									'id' => '',
								),
								'message' => 'Hide',
								'default_value' => 0,
								'ui' => 0,
								'ui_on_text' => '',
								'ui_off_text' => '',
							),
							array(
								'key' => 'builder_function_breakpoints_large_cols',
								'label' => 'Columns',
								'name' => 'col',
								'type' => 'number',
								'instructions' => '',
								'required' => 0,
								'conditional_logic' => array(
									array(
										array(
											'field' => 'builder_function_breakpoints_large_hide',
											'operator' => '!=',
											'value' => '1',
										),
									),
								),
								'wrapper' => array(
									'width' => '28',
									'class' => '',
									'id' => '',
								),
								'default_value' => '',
								'placeholder' => '',
								'prepend' => 'col-lg-',
								'append' => '',
								'min' => 1,
								'max' => 12,
								'step' => 1,
							),
							array(
								'key' => 'builder_function_breakpoints_large_offset',
								'label' => 'Offset',
								'name' => 'offset',
								'type' => 'number',
								'instructions' => '',
								'required' => 0,
								'conditional_logic' => array(
									array(
										array(
											'field' => 'builder_function_breakpoints_large_hide',
											'operator' => '!=',
											'value' => '1',
										),
									),
								),
								'wrapper' => array(
									'width' => '28',
									'class' => '',
									'id' => '',
								),
								'default_value' => '',
								'placeholder' => '',
								'prepend' => 'offset-lg-',
								'append' => '',
								'min' => 0,
								'max' => 11,
								'step' => 1,
							),
							array(
								'key' => 'builder_function_breakpoints_large_order',
								'label' => 'Order',
								'name' => 'order',
								'type' => 'number',
								'instructions' => '',
								'required' => 0,
								'conditional_logic' => array(
									array(
										array(
											'field' => 'builder_function_breakpoints_large_hide',
											'operator' => '!=',
											'value' => '1',
										),
									),
								),
								'wrapper' => array(
									'width' => '28',
									'class' => '',
									'id' => '',
								),
								'default_value' => '',
								'placeholder' => '',
								'prepend' => 'order-lg-',
								'append' => '',
								'min' => 0,
								'max' => 12,
								'step' => 1,
							),
						),
					),
					array(
						'key' => 'builder_function_breakpoints_xl',
						'label' => 'X-Large',
						'name' => 'xl',
						'type' => 'group',
						'instructions' => '',
						'required' => 0,
						'conditional_logic' => 0,
						'wrapper' => array(
							'width' => '',
							'class' => '',
							'id' => '',
						),
						'layout' => 'block',
						'sub_fields' => array(
							array(
								'key' => 'builder_function_breakpoints_xl_hide',
								'label' => 'Hide',
								'name' => 'hide',
								'type' => 'true_false',
								'instructions' => '',
								'required' => 0,
								'conditional_logic' => 0,
								'wrapper' => array(
									'width' => '16',
									'class' => '',
									'id' => '',
								),
								'message' => 'Hide',
								'default_value' => 0,
								'ui' => 0,
								'ui_on_text' => '',
								'ui_off_text' => '',
							),
							array(
								'key' => 'builder_function_breakpoints_xl_cols',
								'label' => 'Columns',
								'name' => 'col',
								'type' => 'number',
								'instructions' => '',
								'required' => 0,
								'conditional_logic' => array(
									array(
										array(
											'field' => 'builder_function_breakpoints_xl_hide',
											'operator' => '!=',
											'value' => '1',
										),
									),
								),
								'wrapper' => array(
									'width' => '28',
									'class' => '',
									'id' => '',
								),
								'default_value' => '',
								'placeholder' => '',
								'prepend' => 'col-xl-',
								'append' => '',
								'min' => 1,
								'max' => 12,
								'step' => 1,
							),
							array(
								'key' => 'builder_function_breakpoints_xl_offset',
								'label' => 'Offset',
								'name' => 'offset',
								'type' => 'number',
								'instructions' => '',
								'required' => 0,
								'conditional_logic' => array(
									array(
										array(
											'field' => 'builder_function_breakpoints_xl_hide',
											'operator' => '!=',
											'value' => '1',
										),
									),
								),
								'wrapper' => array(
									'width' => '28',
									'class' => '',
									'id' => '',
								),
								'default_value' => '',
								'placeholder' => '',
								'prepend' => 'offset-xl-',
								'append' => '',
								'min' => 0,
								'max' => 11,
								'step' => 1,
							),
							array(
								'key' => 'builder_function_breakpoints_xl_order',
								'label' => 'Order',
								'name' => 'order',
								'type' => 'number',
								'instructions' => '',
								'required' => 0,
								'conditional_logic' => array(
									array(
										array(
											'field' => 'builder_function_breakpoints_xl_hide',
											'operator' => '!=',
											'value' => '1',
										),
									),
								),
								'wrapper' => array(
									'width' => '28',
									'class' => '',
									'id' => '',
								),
								'default_value' => '',
								'placeholder' => '',
								'prepend' => 'order-xl-',
								'append' => '',
								'min' => 0,
								'max' => 12,
								'step' => 1,
							),
						),
					),
				),
			),
		),
		'active' => false,
	)
);

//
// QUERY
//

// create an array of post types

$query_selectable_types = array();

if ( !empty ( get_post_types ( array ( 'publicly_queryable' => true ) ) ) )
	$query_selectable_types = get_post_types ( array ( 'publicly_queryable' => true ) );

$GLOBALS['fw_fields']['common']['function']['query'] = array(
	'settings' => array (
		'title' => 'Function â€” Query'
	),
	'field_group' => array (
		'key' => 'builder_function_query',
		'title' => 'Query',
		'fields' => array(
			array(
				'key' => 'builder_function_query_items',
				'label' => 'Number of Items',
				'name' => 'posts_per_page',
				'type' => 'number',
				'instructions' => 'How many items to retrieve. Enter -1 to get all items.',
				'required' => 0,
				'conditional_logic' => 0,
				'wrapper' => array(
					'width' => '40',
					'class' => '',
					'id' => '',
				),
				'default_value' => -1,
				'placeholder' => '',
				'prepend' => '',
				'append' => '',
				'min' => -1,
				'max' => 20,
				'step' => 1,
			),
			array(
				'key' => 'builder_function_query_type',
				'label' => 'Query Type',
				'name' => 'query_type',
				'type' => 'select',
				'instructions' => 'Retrieve posts or terms?',
				'required' => 0,
				'conditional_logic' => 0,
				'wrapper' => array(
					'width' => '40',
					'class' => '',
					'id' => '',
				),
				'choices' => array(
					'posts' => 'Posts',
					'terms' => 'Taxonomy Terms',
				),
				'default_value' => false,
				'allow_null' => 0,
				'multiple' => 0,
				'ui' => 0,
				'return_format' => 'value',
				'ajax' => 0,
				'placeholder' => '',
			),
			array(
				'key' => 'builder_function_query_debug',
				'label' => 'Debug',
				'name' => 'debug',
				'type' => 'true_false',
				'instructions' => 'Output debug info',
				'required' => 0,
				'conditional_logic' => 0,
				'wrapper' => array(
					'width' => '20',
					'class' => '',
					'id' => '',
				),
				'message' => '',
				'default_value' => 0,
				'ui' => 1,
				'ui_on_text' => 'On',
				'ui_off_text' => 'Off',
			),
			array(
				'key' => 'builder_function_query_post_params',
				'label' => 'Post Parameters',
				'name' => 'post',
				'type' => 'group',
				'instructions' => '',
				'required' => 0,
				'conditional_logic' => array(
					array(
						array(
							'field' => 'builder_function_query_type',
							'operator' => '==',
							'value' => 'posts',
						),
					),
				),
				'wrapper' => array(
					'width' => '',
					'class' => '',
					'id' => '',
				),
				'layout' => 'block',
				'sub_fields' => array(
					array(
						'key' => 'builder_function_query_post_basic',
						'label' => 'Basic',
						'name' => '',
						'type' => 'tab',
						'instructions' => '',
						'required' => 0,
						'conditional_logic' => 0,
						'wrapper' => array(
							'width' => '',
							'class' => '',
							'id' => '',
						),
						'placement' => 'left',
						'endpoint' => 0,
					),
					array(
						'key' => 'builder_function_query_post_types_group',
						'label' => 'Post Types',
						'name' => 'post_types',
						'type' => 'group',
						'instructions' => '',
						'required' => 0,
						'conditional_logic' => 0,
						'wrapper' => array(
							'width' => '',
							'class' => '',
							'id' => '',
						),
						'layout' => 'block',
						'sub_fields' => array(

							array(
								'key' => 'builder_function_query_post_types',
								'label' => 'Post Types',
								'name' => 'post_type',
								'type' => 'checkbox',
								'instructions' => 'Check the boxes to limit the query to specific post types.',
								'required' => 0,
								'conditional_logic' => 0,
								'wrapper' => array(
									'width' => '50',
									'class' => '',
									'id' => '',
								),
								'choices' => $query_selectable_types,
								'allow_custom' => 0,
								'save_custom' => 0,
								'default_value' => array(
								),
								'layout' => 'vertical',
								'toggle' => 0,
								'return_format' => 'value',
							),

							array(
								'key' => 'builder_function_query_post_filterable',
								'label' => 'Show in Filter',
								'name' => 'filterable',
								'type' => 'true_false',
								'instructions' => 'Allow the items to be filtered by post type.',
								'required' => 0,
								'conditional_logic' => 0,
								'wrapper' => array(
									'width' => '50',
									'class' => '',
									'id' => '',
								),
								'message' => '',
								'default_value' => 0,
								'ui' => 1,
								'ui_on_text' => '',
								'ui_off_text' => '',
							),
						),
					),
					array(
						'key' => 'builder_function_query_post_sort_group',
						'label' => 'Sort',
						'name' => 'sort',
						'type' => 'group',
						'instructions' => '',
						'required' => 0,
						'conditional_logic' => 0,
						'wrapper' => array(
							'width' => '',
							'class' => '',
							'id' => '',
						),
						'layout' => 'block',
						'sub_fields' => array(
							array(
								'key' => 'builder_function_query_post_orderby',
								'label' => 'Sort By',
								'name' => 'orderby',
								'type' => 'select',
								'instructions' => '',
								'required' => 0,
								'conditional_logic' => 0,
								'wrapper' => array(
									'width' => '33',
									'class' => '',
									'id' => '',
								),
								'choices' => array(
									'title' => 'Title',
									'date' => 'Date',
									'menu_order' => 'Wordpress Menu Order',
									'meta_value_num' => 'Custom Field Value (0â€“9)',
									'meta_value' => 'Custom Field Value (Aâ€“Z)',
									'rand' => 'Random',
								),
								'default_value' => false,
								'allow_null' => 0,
								'multiple' => 0,
								'ui' => 0,
								'return_format' => 'value',
								'ajax' => 0,
								'placeholder' => '',
							),
							array(
								'key' => 'builder_function_query_post_order',
								'label' => 'Sort Order',
								'name' => 'order',
								'type' => 'select',
								'instructions' => '',
								'required' => 0,
								'conditional_logic' => 0,
								'wrapper' => array(
									'width' => '33',
									'class' => '',
									'id' => '',
								),
								'choices' => array(
									'asc' => 'Ascending',
									'desc' => 'Descending',
								),
								'default_value' => false,
								'allow_null' => 0,
								'multiple' => 0,
								'ui' => 0,
								'return_format' => 'value',
								'ajax' => 0,
								'placeholder' => '',
							),
							array(
								'key' => 'builder_function_query_post_orderby_meta',
								'label' => 'Meta Key',
								'name' => 'meta_key',
								'type' => 'text',
								'instructions' => '',
								'required' => 0,
								'conditional_logic' => array(
									array(
										array(
											'field' => 'builder_function_query_post_orderby',
											'operator' => '==',
											'value' => 'meta_value_num',
										),
									),
									array(
										array(
											'field' => 'builder_function_query_post_orderby',
											'operator' => '==',
											'value' => 'meta_value',
										),
									),
								),
								'wrapper' => array(
									'width' => '33',
									'class' => '',
									'id' => '',
								),
								'default_value' => '',
								'placeholder' => '',
								'prepend' => '',
								'append' => '',
								'maxlength' => '',
							),
						),
					),
					array(
						'key' => 'builder_function_query_tax',
						'label' => 'Taxonomy Query',
						'name' => '',
						'type' => 'tab',
						'instructions' => '',
						'required' => 0,
						'conditional_logic' => 0,
						'wrapper' => array(
							'width' => '33',
							'class' => '',
							'id' => '',
						),
						'placement' => 'top',
						'endpoint' => 0,
					),
					array(
						'key' => 'builder_function_query_tax_group',
						'label' => 'Taxonomy Arguments',
						'name' => 'tax_query',
						'type' => 'group',
						'instructions' => '',
						'required' => 0,
						'conditional_logic' => 0,
						'wrapper' => array(
							'width' => '',
							'class' => '',
							'id' => '',
						),
						'layout' => 'block',
						'sub_fields' => array(
							array(
								'key' => 'builder_function_query_tax_args',
								'label' => 'Arguments',
								'name' => 'arguments',
								'type' => 'repeater',
								'instructions' => '',
								'required' => 0,
								'conditional_logic' => 0,
								'wrapper' => array(
									'width' => '',
									'class' => '',
									'id' => '',
								),
								'wpml_cf_preferences' => 0,
								'collapsed' => 'builder_function_query_tax_terms',
								'min' => 0,
								'max' => 0,
								'layout' => 'block',
								'button_label' => 'Add Taxonomy',
								'sub_fields' => array(
									array(
										'key' => 'builder_function_query_tax_taxonomy',
										'label' => 'Taxonomy',
										'name' => 'taxonomy',
										'type' => 'text',
										'instructions' => '',
										'required' => 0,
										'conditional_logic' => 0,
										'wrapper' => array(
											'width' => '50',
											'class' => '',
											'id' => '',
										),
										'default_value' => '',
										'placeholder' => '',
										'prepend' => '',
										'append' => '',
										'maxlength' => '',
									),
									array(
										'key' => 'builder_function_query_tax_terms',
										'label' => 'Terms',
										'name' => 'terms',
										'type' => 'text',
										'instructions' => '',
										'required' => 0,
										'conditional_logic' => 0,
										'wrapper' => array(
											'width' => '50',
											'class' => '',
											'id' => '',
										),
										'default_value' => '',
										'placeholder' => '',
										'prepend' => '',
										'append' => '',
										'maxlength' => '',
									),
									array(
										'key' => 'builder_function_query_tax_filterable',
										'label' => 'Show in Filter',
										'name' => 'filterable',
										'type' => 'true_false',
										'instructions' => 'Allow the items to be filtered by this taxonomy.',
										'required' => 0,
										'conditional_logic' => 0,
										'wrapper' => array(
											'width' => '50',
											'class' => '',
											'id' => '',
										),
										'message' => '',
										'default_value' => 0,
										'ui' => 1,
										'ui_on_text' => '',
										'ui_off_text' => '',
									),
									array(
										'key' => 'builder_function_query_tax_multiple',
										'label' => 'Allow multiple selections',
										'name' => 'multiple',
										'type' => 'true_false',
										'instructions' => '',
										'required' => 0,
										'conditional_logic' => array(
											array(
												array(
													'field' => 'builder_function_query_tax_filterable',
													'operator' => '==',
													'value' => '1',
												),
											),
										),
										'wrapper' => array(
											'width' => '50',
											'class' => '',
											'id' => '',
										),
										'message' => '',
										'default_value' => 0,
										'ui' => 1,
										'ui_on_text' => '',
										'ui_off_text' => '',
									),
								),
							),
							array(
								'key' => 'builder_function_query_tax_relation',
								'label' => 'Relation',
								'name' => 'relation',
								'type' => 'select',
								'instructions' => '',
								'required' => 0,
								'conditional_logic' => 0,
								'wrapper' => array(
									'width' => '',
									'class' => '',
									'id' => '',
								),
								'choices' => array(
									'and' => 'And',
									'or' => 'Or',
								),
								'default_value' => false,
								'allow_null' => 0,
								'multiple' => 0,
								'ui' => 0,
								'return_format' => 'value',
								'ajax' => 0,
								'placeholder' => '',
							),
						),
					),
					array(
						'key' => 'builder_function_query_meta',
						'label' => 'Meta Query',
						'name' => '',
						'type' => 'tab',
						'instructions' => '',
						'required' => 0,
						'conditional_logic' => 0,
						'wrapper' => array(
							'width' => '33',
							'class' => '',
							'id' => '',
						),
						'placement' => 'top',
						'endpoint' => 0,
					),
					array(
						'key' => 'builder_function_query_meta_group',
						'label' => 'Meta Query',
						'name' => 'meta_query',
						'type' => 'group',
						'instructions' => '',
						'required' => 0,
						'conditional_logic' => 0,
						'wrapper' => array(
							'width' => '',
							'class' => '',
							'id' => '',
						),
						'layout' => 'block',
						'sub_fields' => array(
							array(
								'key' => 'builder_function_query_meta_args',
								'label' => 'Arguments',
								'name' => 'arguments',
								'type' => 'repeater',
								'instructions' => '',
								'required' => 0,
								'conditional_logic' => 0,
								'wrapper' => array(
									'width' => '',
									'class' => '',
									'id' => '',
								),
								'collapsed' => 'builder_function_query_meta_key',
								'min' => 0,
								'max' => 0,
								'layout' => 'block',
								'button_label' => 'Add Key',
								'sub_fields' => array(
									array(
										'key' => 'builder_function_query_meta_key',
										'label' => 'Key',
										'name' => 'key',
										'type' => 'text',
										'instructions' => '',
										'required' => 0,
										'conditional_logic' => 0,
										'wrapper' => array(
											'width' => '33',
											'class' => '',
											'id' => '',
										),
										'default_value' => '',
										'placeholder' => '',
										'prepend' => '',
										'append' => '',
										'maxlength' => '',
									),
									array(
										'key' => 'builder_function_query_meta_value',
										'label' => 'Value',
										'name' => 'value',
										'type' => 'text',
										'instructions' => '',
										'required' => 0,
										'conditional_logic' => 0,
										'wrapper' => array(
											'width' => '33',
											'class' => '',
											'id' => '',
										),
										'default_value' => '',
										'placeholder' => '',
										'prepend' => '',
										'append' => '',
										'maxlength' => '',
									),
									array(
										'key' => 'builder_function_query_meta_compare',
										'label' => 'Compare',
										'name' => 'compare',
										'type' => 'select',
										'instructions' => '',
										'required' => 0,
										'conditional_logic' => 0,
										'wrapper' => array(
											'width' => '33',
											'class' => '',
											'id' => '',
										),
										'choices' => array(
											'=' => '=',
											'!=' => '!=',
											'>' => '>',
											'>=' => '>=',
											'<' => '<',
											'<=' => '<=',
											'LIKE' => 'LIKE',
											'NOT LIKE' => 'NOT LIKE',
											'IN' => 'IN',
											'NOT IN' => 'NOT IN',
											'BETWEEN' => 'BETWEEN',
											'NOT BETWEEN' => 'NOT BETWEEN',
										),
										'default_value' => false,
										'allow_null' => 1,
										'multiple' => 0,
										'ui' => 0,
										'return_format' => 'value',
										'ajax' => 0,
										'placeholder' => '',
									),
									array(
										'key' => 'builder_function_query_meta_filterable',
										'label' => 'Show in Filter',
										'name' => 'filterable',
										'type' => 'true_false',
										'instructions' => 'Allow the items to be filtered by this field value.',
										'required' => 0,
										'conditional_logic' => 0,
										'wrapper' => array(
											'width' => '50',
											'class' => '',
											'id' => '',
										),
										'message' => '',
										'default_value' => 0,
										'ui' => 1,
										'ui_on_text' => '',
										'ui_off_text' => '',
									),
									array(
										'key' => 'builder_function_query_meta_multiple',
										'label' => 'Allow multiple selections',
										'name' => 'multiple',
										'type' => 'true_false',
										'instructions' => '',
										'required' => 0,
										'conditional_logic' => array(
											array(
												array(
													'field' => 'builder_function_query_meta_filterable',
													'operator' => '==',
													'value' => '1',
												),
											),
										),
										'wrapper' => array(
											'width' => '50',
											'class' => '',
											'id' => '',
										),
										'message' => '',
										'default_value' => 0,
										'ui' => 1,
										'ui_on_text' => '',
										'ui_off_text' => '',
									),
								),
							),
							array(
								'key' => 'builder_function_query_meta_relation',
								'label' => 'Relation',
								'name' => 'relation',
								'type' => 'select',
								'instructions' => '',
								'required' => 0,
								'conditional_logic' => 0,
								'wrapper' => array(
									'width' => '',
									'class' => '',
									'id' => '',
								),
								'choices' => array(
									'and' => 'And',
									'or' => 'Or',
								),
								'default_value' => false,
								'allow_null' => 0,
								'multiple' => 0,
								'ui' => 0,
								'return_format' => 'value',
								'ajax' => 0,
								'placeholder' => '',
							),
						),
					),
					array(
						'key' => 'builder_function_query_page',
						'label' => 'Page Parameters',
						'name' => '',
						'type' => 'tab',
						'instructions' => '',
						'required' => 0,
						'conditional_logic' => 0,
						'wrapper' => array(
							'width' => '',
							'class' => '',
							'id' => '',
						),
						'placement' => 'top',
						'endpoint' => 0,
					),
					array(
						'key' => 'builder_function_query_page_group',
						'label' => 'Page Parameters',
						'name' => 'page_params',
						'type' => 'group',
						'instructions' => '',
						'required' => 0,
						'conditional_logic' => 0,
						'wrapper' => array(
							'width' => '',
							'class' => '',
							'id' => '',
						),
						'layout' => 'block',
						'sub_fields' => array(
							array(
								'key' => 'builder_function_query_page_depth',
								'label' => 'Depth',
								'name' => 'depth',
								'type' => 'select',
								'instructions' => '',
								'required' => 0,
								'conditional_logic' => 0,
								'wrapper' => array(
									'width' => '40',
									'class' => '',
									'id' => '',
								),
								'choices' => array(
									'all' => 'All results',
									'top' => 'Top-level only (no parent)',
									'parent' => 'Filter by parent',
								),
								'default_value' => 'all',
								'allow_null' => 0,
								'multiple' => 0,
								'ui' => 0,
								'return_format' => 'value',
								'ajax' => 0,
								'placeholder' => '',
							),
							array(
								'key' => 'builder_function_query_page_parent',
								'label' => 'Parent',
								'name' => 'post_parent',
								'type' => 'post_object',
								'instructions' => '',
								'required' => 0,
								'conditional_logic' => array(
									array(
										array(
											'field' => 'builder_function_query_page_depth',
											'operator' => '==',
											'value' => 'parent',
										),
									),
								),
								'wrapper' => array(
									'width' => '60',
									'class' => '',
									'id' => '',
								),
								'post_type' => '',
								'taxonomy' => '',
								'allow_null' => 1,
								'multiple' => 0,
								'return_format' => 'id',
								'ui' => 1,
							),
							array(
								'key' => 'builder_function_query_page_manual',
								'label' => 'Manually Select Items',
								'name' => 'post__in',
								'type' => 'post_object',
								'instructions' => '',
								'required' => 0,
								'conditional_logic' => 0,
								'wrapper' => array(
									'width' => '',
									'class' => '',
									'id' => '',
								),
								'post_type' => '',
								'taxonomy' => '',
								'allow_null' => 1,
								'multiple' => 1,
								'return_format' => 'id',
								'ui' => 1,
							),
						),
					),
				),
			),
			array(
				'key' => 'builder_function_query_terms_group',
				'label' => 'Taxonomy Parameters',
				'name' => 'taxonomy',
				'type' => 'group',
				'instructions' => '',
				'required' => 0,
				'conditional_logic' => array(
					array(
						array(
							'field' => 'builder_function_query_type',
							'operator' => '==',
							'value' => 'terms',
						),
					),
				),
				'wrapper' => array(
					'width' => '',
					'class' => '',
					'id' => '',
				),
				'layout' => 'block',
				'sub_fields' => array(
					array(
						'key' => 'builder_function_query_terms_tax',
						'label' => 'Taxonomy',
						'name' => 'taxonomy',
						'type' => 'text',
						'instructions' => '',
						'required' => 0,
						'conditional_logic' => 0,
						'wrapper' => array(
							'width' => '',
							'class' => '',
							'id' => '',
						),
						'default_value' => '',
						'placeholder' => '',
						'prepend' => '',
						'append' => '',
						'maxlength' => '',
					),
				),
			),
		),
		'active' => false,
	)
);
