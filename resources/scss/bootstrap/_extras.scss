//
// NESTED COLUMNS
//

// mixins

@mixin nested-column($x: 12, $y: 12) {
	@include make-col-ready();
	@include make-col($x, $y);
	width: #{((calc($x / $y)) * 100) + '%'};
}

@mixin nested-offset($x: 12, $y: 12) {
	margin-left: #{((calc($x / $y)) * 100) + '%'};
}

// standard widths

@for $z from 3 through 11 {

  $current-max: $z - 1;

  @for $y from 1 through $current-max {

    .col-#{$y}-of-#{$z} { @include nested-column($y, $z) }
    .offset-#{$y}-of-#{$z} { @include nested-offset($y, $z) }

  }

}

// breakpoints

@for $i from 1 through length($all-grid-breakpoints) {

  $current-breakpoint: nth($all-grid-breakpoints, $i);
  $current-breakpoint-size: nth($all-grid-breakpoint-sizes, $i);

  @media (min-width: #{$current-breakpoint-size}px) {

    @for $z from 3 through 11 {

      $current-max: $z - 1;

      @for $y from 0 through $current-max {

        .col-#{$current-breakpoint}-#{$y}-of-#{$z} { @include nested-column($y, $z) }
        .offset-#{$current-breakpoint}-#{$y}-of-#{$z} { @include nested-offset($y, $z) }

      }

    }

  }

}

//
// NEGATIVE OFFSETS
//

// standard

@for $z from 1 through 11 {

	.offset-n#{$z} {
		margin-left: #{( calc($z / 12) * -100 ) + '%'};
  }

}

// breakpoints

@for $i from 1 through length($all-grid-breakpoints) {

  $current-breakpoint: nth($all-grid-breakpoints, $i);
  $current-breakpoint-size: nth($all-grid-breakpoint-sizes, $i);

  @media (min-width: #{$current-breakpoint-size}px) {

    @for $z from 1 through 11 {

      .offset-#{$current-breakpoint}-n#{$z} {
				margin-left: #{( calc($z / 12) * -100 ) + '%'};
			}

    }

  }

}